# -*- coding: utf-8 -*-
# Generated by Django 1.11.27 on 2020-01-09 14:59
from __future__ import unicode_literals

import re

from django.conf import settings
from django.db import migrations

from indigo_api.models import Act
from indigo.plugins import plugins


def migrate_commencements(apps, schema_editor):
    """ Copy commencement details from works to Commencement objects
    """
    Work = apps.get_model("indigo_api", "Work")
    Document = apps.get_model("indigo_api", "Document")
    Commencement = apps.get_model("indigo_api", "Commencement")
    db_alias = schema_editor.connection.alias

    def for_document(topic, document):
        country_code = document.work.country.country.iso.lower()
        locality = document.work.locality.code if document.work.locality else None
        language_code = document.language.language.iso_639_2B
        return plugins.for_locale(topic, country=country_code, locality=locality, language=language_code)

    def table_of_contents_for_document(self, document):
        def make_act(xml):
            id = re.sub(r'[^a-zA-Z0-9]', '-', settings.INDIGO_ORGANISATION)
            doc = Act(xml)
            doc.source = [settings.INDIGO_ORGANISATION, id, settings.INDIGO_URL]
            return doc
        doc = make_act(document.document_xml)
        django_language = document.language.language.iso_639_1
        return self.table_of_contents(doc, django_language)

    def table_of_contents(expression):
        builder = for_document('toc', expression)
        return table_of_contents_for_document(builder, expression)

    def get_all_provisions(work):
        toc = None
        ids = []

        first_expression = Document.objects.filter(work=work, deleted=False).order_by('expression_date').first()
        if first_expression:
            toc = table_of_contents(first_expression)

        def add_ids(toc):
            for e in toc:
                if e.id:
                    ids.append(e.id)
                if e.children and e.component == 'main':
                    add_ids(e.children)

        if toc:
            add_ids(toc)
        return ids

    for w in Work.objects.using(db_alias).all():
        if w.commencing_work or w.commencement_date:
            all_provisions = get_all_provisions(w)
            commencement = Commencement(
                commenced_work=w,
                commencing_work=w.commencing_work,
                date=w.commencement_date,
                main=True,
                provisions=all_provisions
            )
            commencement.save()


def unmigrate_commencements(apps, schema_editor):
    """ Copy commencement details from Commencement objects to works
    """
    Commencement = apps.get_model("indigo_api", "Commencement")
    db_alias = schema_editor.connection.alias

    for c in Commencement.objects.using(db_alias).all():
        c.commenced_work.commencing_work = c.commencing_work
        c.commenced_work.commencement_date = c.date
        c.commenced_work.save()
        c.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('indigo_api', '0124_commencement'),
    ]

    operations = [
        migrations.RunPython(migrate_commencements, unmigrate_commencements),
    ]
